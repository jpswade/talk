service: webdevtalk-backend
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  environment:
    PROJECT: ${self:service}-${self:provider.stage}
    AUTH_TOKEN_SECRET: 54ac75a91974d8f710dfcf0097ee9e4b
    SERVERLESS_REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PROJECT}-users"
functions:
  graphql:
    handler: handler.graphql
    events:
      - http:
          path: graphql
          method: post
          cors: true
resources:
  Resources:
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.PROJECT}-users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes: 
            - IndexName: "emailIndex"
              KeySchema: 
              - AttributeName: "email"
                KeyType: "HASH"
              Projection: 
                ProjectionType: "ALL"
              ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
    postsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.PROJECT}-posts
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes: 
            - IndexName: "userIdIndex"
              KeySchema: 
              - AttributeName: "userId"
                KeyType: "HASH"
              Projection: 
                ProjectionType: "ALL"
              ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
